@import (reference) "type";
@import (reference) "baselineType";

.__responsiveType(@variant; @compact) when (isstring(@variant)) {
  // Define responsive text breakpoint limits
  @max-breakpoint: (@responsive-breakpoint - 1);
  @min-breakpoint: @responsive-breakpoint;

  // Concatenate type hierarchy variable name
  @type-scale: "@{variant}-type-scale";
  @row-span: "@{variant}-type-row-span";
  @weight: "@{variant}-type-weight";

  .makeMobileVarSuffix() when (not(@compact)) { @mobile-var-suffix: ""; }
  .makeMobileVarSuffix() when (@compact) { @mobile-var-suffix: "-compact"; }
  .makeMobileVarSuffix();

  @mobile-type-scale: "@{type-scale}-mobile@{mobile-var-suffix}";
  @mobile-row-span: "@{row-span}-mobile@{mobile-var-suffix}";
  @mobile-weight: "@{variant}-type-weight-mobile@{mobile-var-suffix}";

  @media only screen and (max-width: @max-breakpoint) {
    .__baselineType(@@mobile-type-scale, @@mobile-row-span);

    font-weight: @@mobile-weight;
  }
  @media only screen and (min-width: @min-breakpoint) {
    .__baselineType(@@type-scale, @@row-span);

    font-weight: @@weight;
  }
}
