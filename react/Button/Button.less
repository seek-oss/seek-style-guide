@import (reference) "~seek-style-guide/theme";

@keyframes loading {
  to {
    width: @gutter-width;
  }
}

.hoverState(@rules) {
  &:hover,
  &.rootHover {
    @rules();
  }
}

.activeState(@rules) {
  &:active,
  &.rootActive {
    @rules();
  }
}

.focusState(@rules) {
  &:focus,
  &.rootFocus {
    @rules();
  }
}

.buttonColor(@color, @background-color) {
  color: @color;
  background-color: @background-color;
  .hoverState({background-color: lighten(@background-color, 5%) ;});
  .activeState({background-color: darken(@background-color, 5%) ;});
}

.ghostColor(@color) {
  .activeBackground() {
    background-color: lighten(@color, 51%);
  }

  border-color: @color;
  color: @color;

  .hoverState({background-color: lighten(@color, 56%) ;});

  .activeState({.activeBackground;});

  .focusState({.activeBackground;});
}

.root {
  .touchableText();
  font-weight: @sk-medium;
  display: inline-block;
  text-decoration: none;
  user-select: none;
  text-align: center;
  padding: 0 @gutter-width;
  box-shadow: inset 0 -1px fade(@sk-charcoal, 40%);
  border: 0;
  border-radius: 2px;
  transition: background-color 0.2s, @spring-transition;
  cursor: pointer;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  .activeState({box-shadow: none; outline: none; transform: scale(0.95) ;});
  .focusState({.focus() ;});
}

.root_isPink {
  .buttonColor(@sk-white, @sk-pink);
}

.root_isBlue {
  .buttonColor(@sk-white, @sk-blue-lighter);
}

.root_isGray {
  .buttonColor(@sk-black, @sk-mid-gray-light);
}

.root_isWhite {
  .buttonColor(@sk-black, @sk-white);
}

.root_isGhost,
.root_isTransparent {
  background-color: transparent;
  box-shadow: none;
}

.root_isGhost {
  @border-width: 2px;

  border: @border-width solid;
  line-height: @touchableTextHeight - (@border-width * 2);
}

.root_isPink.root_isGhost {
  .ghostColor(@sk-pink);
}

.root_isBlue.root_isGhost {
  .ghostColor(@sk-blue-lighter);
}

.root_isWhite.root_isGhost {
  border-color: @sk-white;
  color: @sk-white;

  .activeBackground() {
    background-color: rgba(255, 255, 255, 0.2);
  }

  .activeState({.activeBackground;});

  .hoverState({.activeBackground;});

  .focusState({.activeBackground;});
}

.root_isTransparent {
  color: @sk-link;
  padding-left: 0;
  padding-right: 0;

  .hoverState({text-decoration: underline;});

  .activeState({transform: none;});

  .touchableText(@standard-type-scale);
}

.loading {
  padding-right: @gutter-width * 2;

  &::after {
    content: " \2026";
    text-align: left;
    width: 0;
    overflow-x: hidden;
    display: inline-block;
    position: absolute;
    animation-duration: 0.8s;
    animation-name: loading;
    animation-iteration-count: infinite;
  }
}

.fullWidth {
  width: 100%;
}

.group {
  width: 100%;

  .root {
    vertical-align: top;
    @media only screen and (max-width: 500px) {
      width: 100%;
    }
    &:not(.root_isTransparent) {
      @media @mobile {
        padding-left: @gutter-width * 2;
        padding-right: @gutter-width * 2;
      }
    }
    & + .root {
      margin-left: @gutter-width / 2;
      @media only screen and (max-width: 500px) {
        margin-top: (@row-height * 2);
        margin-left: 0;
      }
    }
    & + .root_isTransparent {
      margin-left: @gutter-width * 2;
      @media only screen and (max-width: 500px) {
        margin-left: 0;
      }
    }
  }
}
