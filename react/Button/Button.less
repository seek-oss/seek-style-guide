@import (reference) "~seek-style-guide/theme";

.hoverState(@rules) {
  &:hover,
  &.rootHover {
    @rules();
  }
}

.activeState(@rules) {
  &:active,
  &.rootActive {
    @rules();
  }
}

.focusState(@rules) {
  &:focus,
  &.rootFocus {
    @rules();
  }
}

.buttonColor(@color, @background-color) {
  color: @color;
  background-color: @background-color;

  .hoverState({
    background-color: lighten(@background-color, 5%);
  });

  .activeState({
    background-color: darken(@background-color, 5%);
  });
}

.root {
  .touchableText();
  display: inline-block;
  text-decoration: none;
  user-select: none;
  text-align: center;
  padding: 0 @grid-gutter-width;
  box-shadow: 0 1px fade(@sk-black, 70%);
  border: 0;
  border-radius: 2px;
  transition: background-color 0.2s, transform .2s cubic-bezier(0.020, 1.505, 0.745, 1.235);
  cursor: pointer;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  .activeState({
    box-shadow: none;
    outline: none;
    transform: scale(0.95);
  });
  .focusState({
    .focus();
  });
}

.root_isPink {
  .buttonColor(@sk-white, @sk-pink);
}

.root_isBlue {
  .buttonColor(@sk-white, @sk-highlight);
}

.root_isGray {
  .buttonColor(@sk-black, @sk-mid-gray-light);
}

.root_isTransparent {
  color: @sk-link;
  background-color: transparent;
  box-shadow: none;
  padding-left: 0;
  padding-right: 0;

  .hoverState({
    text-decoration: underline;
  });

  .activeState({
    transform: none;
  });

  @media only screen and (min-width: @responsive-breakpoint) {
    .touchableText(@standard-type-scale);
  }
}

.loading {
  padding-right: @grid-gutter-width * 2;

  &:after {
    content: ' \2026';
    text-align: left;
    width: 0;
    overflow-x: hidden;
    display: inline-block;
    position: absolute;
    animation-duration: 0.8s;
    animation-name: loading;
    animation-iteration-count: infinite;
  }
}

.fullWidth {
  width: 100%;
}

@keyframes loading {
  to {
    width: @grid-gutter-width;
  }
}
