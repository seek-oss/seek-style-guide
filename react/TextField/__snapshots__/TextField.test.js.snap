// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextField clear button inputProps should be visible when value has white spaces only 1`] = `
<div
  className="TextField__root TextField__canClear"
>
  <FieldLabel
    id="testTextField"
    label=""
    raw={false}
    secondaryLabel=""
    tertiaryLabel=""
  />
  <input
    aria-describedby="testTextField-message"
    className="TextField__input"
    id="testTextField"
    onChange={[Function]}
    value="  "
  />
  <span
    className="TextField__clearField"
    onMouseDown={[Function]}
  >
    <ClearField />
  </span>
  <FieldMessage
    id="testTextField-message"
    message=""
    messageProps={
      Object {
        "critical": false,
        "positive": false,
        "secondary": false,
      }
    }
  />
</div>
`;

exports[`TextField clear button inputProps should be visible when value is provided 1`] = `
<div
  className="TextField__root TextField__canClear"
>
  <FieldLabel
    id="testTextField"
    label=""
    raw={false}
    secondaryLabel=""
    tertiaryLabel=""
  />
  <input
    aria-describedby="testTextField-message"
    className="TextField__input"
    id="testTextField"
    onChange={[Function]}
    value="abc"
  />
  <span
    className="TextField__clearField"
    onMouseDown={[Function]}
  >
    <ClearField />
  </span>
  <FieldMessage
    id="testTextField-message"
    message=""
    messageProps={
      Object {
        "critical": false,
        "positive": false,
        "secondary": false,
      }
    }
  />
</div>
`;

exports[`TextField clear button inputProps should not be visible when value is empty 1`] = `
<div
  className="TextField__root"
>
  <FieldLabel
    id="testTextField"
    label=""
    raw={false}
    secondaryLabel=""
    tertiaryLabel=""
  />
  <input
    aria-describedby="testTextField-message"
    className="TextField__input"
    id="testTextField"
    onChange={[Function]}
    value=""
  />
  <span
    className="TextField__clearField"
    onMouseDown={[Function]}
  >
    <ClearField />
  </span>
  <FieldMessage
    id="testTextField-message"
    message=""
    messageProps={
      Object {
        "critical": false,
        "positive": false,
        "secondary": false,
      }
    }
  />
</div>
`;

exports[`TextField clear button inputProps should not be visible when value is provided but no clear handler 1`] = `
<div
  className="TextField__root"
>
  <FieldLabel
    id="testTextField"
    label=""
    raw={false}
    secondaryLabel=""
    tertiaryLabel=""
  />
  <input
    aria-describedby="testTextField-message"
    className="TextField__input"
    id="testTextField"
    onChange={[Function]}
    value="abc"
  />
  <span
    className="TextField__clearField"
    onMouseDown={[Function]}
  >
    <ClearField />
  </span>
  <FieldMessage
    id="testTextField-message"
    message=""
    messageProps={
      Object {
        "critical": false,
        "positive": false,
        "secondary": false,
      }
    }
  />
</div>
`;

exports[`TextField clear button should be visible when value has white spaces only 1`] = `
<div
  className="TextField__root TextField__canClear"
>
  <FieldLabel
    id="testTextField"
    label=""
    raw={false}
    secondaryLabel=""
    tertiaryLabel=""
  />
  <input
    aria-describedby="testTextField-message"
    className="TextField__input"
    id="testTextField"
    onChange={[Function]}
    value="  "
  />
  <span
    className="TextField__clearField"
    onMouseDown={[Function]}
  >
    <ClearField />
  </span>
  <FieldMessage
    id="testTextField-message"
    message=""
    messageProps={
      Object {
        "critical": false,
        "positive": false,
        "secondary": false,
      }
    }
  />
</div>
`;

exports[`TextField clear button should be visible when value is provided 1`] = `
<div
  className="TextField__root TextField__canClear"
>
  <FieldLabel
    id="testTextField"
    label=""
    raw={false}
    secondaryLabel=""
    tertiaryLabel=""
  />
  <input
    aria-describedby="testTextField-message"
    className="TextField__input"
    id="testTextField"
    onChange={[Function]}
    value="abc"
  />
  <span
    className="TextField__clearField"
    onMouseDown={[Function]}
  >
    <ClearField />
  </span>
  <FieldMessage
    id="testTextField-message"
    message=""
    messageProps={
      Object {
        "critical": false,
        "positive": false,
        "secondary": false,
      }
    }
  />
</div>
`;

exports[`TextField clear button should not be visible when value is empty 1`] = `
<div
  className="TextField__root"
>
  <FieldLabel
    id="testTextField"
    label=""
    raw={false}
    secondaryLabel=""
    tertiaryLabel=""
  />
  <input
    aria-describedby="testTextField-message"
    className="TextField__input"
    id="testTextField"
    onChange={[Function]}
    value=""
  />
  <span
    className="TextField__clearField"
    onMouseDown={[Function]}
  >
    <ClearField />
  </span>
  <FieldMessage
    id="testTextField-message"
    message=""
    messageProps={
      Object {
        "critical": false,
        "positive": false,
        "secondary": false,
      }
    }
  />
</div>
`;

exports[`TextField clear button should not be visible when value is provided but no clear handler 1`] = `
<div
  className="TextField__root"
>
  <FieldLabel
    id="testTextField"
    label=""
    raw={false}
    secondaryLabel=""
    tertiaryLabel=""
  />
  <input
    aria-describedby="testTextField-message"
    className="TextField__input"
    id="testTextField"
    onChange={[Function]}
    value="abc"
  />
  <span
    className="TextField__clearField"
    onMouseDown={[Function]}
  >
    <ClearField />
  </span>
  <FieldMessage
    id="testTextField-message"
    message=""
    messageProps={
      Object {
        "critical": false,
        "positive": false,
        "secondary": false,
      }
    }
  />
</div>
`;

exports[`TextField should render with defaults 1`] = `
<div
  className="TextField__root"
>
  <FieldLabel
    id="testTextField"
    label=""
    raw={false}
    secondaryLabel=""
    tertiaryLabel=""
  />
  <input
    aria-describedby="testTextField-message"
    className="TextField__input"
    id="testTextField"
    onChange={[Function]}
    value=""
  />
  <span
    className="TextField__clearField"
    onMouseDown={[Function]}
  >
    <ClearField />
  </span>
  <FieldMessage
    id="testTextField-message"
    message=""
    messageProps={
      Object {
        "critical": false,
        "positive": false,
        "secondary": false,
      }
    }
  />
</div>
`;

exports[`TextField should render with input props 1`] = `
<div
  className="TextField__root"
>
  <FieldLabel
    id="testTextField"
    label=""
    raw={false}
    secondaryLabel=""
    tertiaryLabel=""
  />
  <input
    aria-describedby="testTextField-message"
    className="TextField__input first-name-field"
    data-automation="first-name-field"
    id="testTextField"
    onChange={[Function]}
    value="value"
  />
  <span
    className="TextField__clearField"
    onMouseDown={[Function]}
  >
    <ClearField />
  </span>
  <FieldMessage
    id="testTextField-message"
    message=""
    messageProps={
      Object {
        "critical": false,
        "positive": false,
        "secondary": false,
      }
    }
  />
</div>
`;

exports[`TextField valid / tone should not render the invalid style if tone is set to positive 1`] = `
<div
  className="TextField__root"
>
  <FieldLabel
    id="testTextField"
    label=""
    raw={false}
    secondaryLabel=""
    tertiaryLabel=""
  />
  <input
    aria-describedby="testTextField-message"
    className="TextField__input"
    id="testTextField"
    onChange={[Function]}
    value=""
  />
  <span
    className="TextField__clearField"
    onMouseDown={[Function]}
  >
    <ClearField />
  </span>
  <FieldMessage
    id="testTextField-message"
    message=""
    messageProps={
      Object {
        "critical": false,
        "positive": false,
        "secondary": false,
      }
    }
    tone="positive"
  />
</div>
`;

exports[`TextField valid / tone should render the invalid style for tone="critical" even if the field is valid 1`] = `
<div
  className="TextField__root TextField__invalid"
>
  <FieldLabel
    id="testTextField"
    label=""
    raw={false}
    secondaryLabel=""
    tertiaryLabel=""
  />
  <input
    aria-describedby="testTextField-message"
    className="TextField__input"
    id="testTextField"
    onChange={[Function]}
    value=""
  />
  <span
    className="TextField__clearField"
    onMouseDown={[Function]}
  >
    <ClearField />
  </span>
  <FieldMessage
    id="testTextField-message"
    message=""
    messageProps={
      Object {
        "critical": false,
        "positive": false,
        "secondary": false,
      }
    }
    tone="critical"
  />
</div>
`;

exports[`TextField valid / tone should render the invalid style for valid={false} where no tone is set. It should also pass the valid prop 1`] = `
<div
  className="TextField__root TextField__invalid"
>
  <FieldLabel
    id="testTextField"
    label=""
    raw={false}
    secondaryLabel=""
    tertiaryLabel=""
  />
  <input
    aria-describedby="testTextField-message"
    className="TextField__input"
    id="testTextField"
    onChange={[Function]}
    value=""
  />
  <span
    className="TextField__clearField"
    onMouseDown={[Function]}
  >
    <ClearField />
  </span>
  <FieldMessage
    id="testTextField-message"
    message=""
    messageProps={
      Object {
        "critical": false,
        "positive": false,
        "secondary": false,
      }
    }
    valid={false}
  />
</div>
`;
