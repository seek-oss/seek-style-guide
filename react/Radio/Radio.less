@import (reference) "~seek-style-guide/theme";
@circumference: @row-height * 5;
@touchableMargin: (@touchableTextHeight - @circumference) / 2;

.label {
  display: flex;
  cursor: pointer;
  min-height: @touchableTextHeight;

  :global(*) {
    pointer-events: none;
  }
}

.input {
  opacity: 0;
  position: absolute;
  width: @circumference;
  height: @circumference;
  border: none;
  margin: @touchableMargin 0 0 0;
}

.labelText {
  @media @desktop {
    padding: (
        ((@interaction-type-row-span - @standard-type-row-span) / 2) *
          @row-height
      )
      0;
  }
  @media @mobile {
    padding: (
        ((@interaction-type-row-span - @standard-type-row-span-mobile) / 2) *
          @row-height
      )
      0;
  }

  .input:checked + .svg & {
    font-weight: @sk-bold;
  }
}

.svg {
  flex-shrink: 0;
  background-color: @sk-white;
  width: @circumference;
  height: @circumference;
  border: @field-border-width solid @sk-mid-gray-light;
  border-radius: 100%;
  padding: 5px;
  margin-top: @touchableMargin;
  margin-right: @gutter-width / 2;

  .input:not([readonly]):not([disabled]):focus + .svg & {
    .focus();
    border-radius: 100%;
  }
}

.circle {
  transition: opacity 0.2s ease, @spring-transition;
  transform-origin: 50% 50%;
  opacity: 0;

  .input:active + .svg & {
    transform: scale(0.9);
  }

  &.circle_isSelected {
    fill: @sk-form-accent;

    .input:checked + .svg & {
      opacity: 1;
    }
  }

  &.circle_isHover {
    fill: @sk-gray-light;

    .input:focus:not(:checked) + .svg &,
    .input:hover:not(:checked) + .svg & {
      opacity: 1;
    }
  }
}
