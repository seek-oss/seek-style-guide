@import (reference) "~seek-asia-style-guide/theme";
@circumference: @grid-row-height * 5;

.root {
  .touchableText(@conversational-type-scale);
  display: inline-flex;
  align-items: center;
}

.input {
  opacity: 0;
  position: absolute;
  width: @circumference;
  height: @circumference;
  border: none;
  margin: 0;
  cursor: pointer;
}

.label {
  display: flex;
  cursor: pointer;
  align-items: center;

  :global(*) {
    pointer-events: none;
  }
}

.labelText {
  .input:checked + .label & {
    font-weight: @sk-bold;
  }
}

.buttonText {
  .input:checked + .label & {
    font-weight: @sk-bold;
    color: @sk-gray-light;
  }
}

.box {
  width: 100%;
  height: 100%;
  background-color: @sk-gray-light;
  will-change: transition;
  display: inline-block;
  text-align: center;
  cursor: pointer;
  position: relative;
  border: 2px solid @sk-teal;
  border-radius: 5px;
  padding: @grid-row-height * 2 @grid-row-height * 8;
  .input:checked + .label & {
    transition: all 300ms ease-in-out;
    font-weight: normal;
    background-color: @sk-teal;
    border-color: @sk-teal;
  }
}

.svg {
  background-color: @sk-white;
  width: @circumference;
  height: @circumference;
  border: @field-border-width solid @sk-mid-gray-light;
  border-radius: 100%;
  padding: 5px;
  margin-right: @grid-gutter-width / 2;

  .input:not([readonly]):not([disabled]):focus + .label & {
    .focus();
    border-radius: 100%;
  }
}

.circle {
  transition:
    opacity 0.2s ease,
    transform 0.2s cubic-bezier(0.02, 1.505, 0.745, 1.235);

  transform-origin: 50% 50%;
  opacity: 0;

  .input:active + .label & {
    transform: scale(0.9);
  }

  &.circle_isSelected {
    fill: @sk-form-accent;

    .input:checked + .label & {
      opacity: 1;
    }
  }

  &.circle_isHover {
    fill: @sk-gray-light;

    .input:focus:not(:checked) + .label &,
    .input:hover:not(:checked) + .label & {
      opacity: 1;
    }
  }
}
