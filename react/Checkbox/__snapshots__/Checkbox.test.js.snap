// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Checkbox FieldMessage should render field message when passed 1`] = `
<div
  className="Checkbox__root Checkbox__invalid"
>
  <input
    checked={false}
    className="Checkbox__input Checkbox__input_isCheckbox"
    id="testCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <label
    className="Checkbox__label"
    htmlFor="testCheckbox"
  >
    <div
      className="Checkbox__checkbox"
    >
      <CheckMarkIcon
        className="Checkbox__checkMark"
        svgClassName="Checkbox__checkMarkSvg Checkbox__checkMarkSvg_isHover"
      />
      <CheckMarkIcon
        className="Checkbox__checkMark"
        svgClassName="Checkbox__checkMarkSvg Checkbox__checkMarkSvg_isSelected"
      />
    </div>
    <Text
      baseline={false}
      className="Checkbox__labelText"
      component="span"
      raw={true}
    >
      Still in role
    </Text>
  </label>
  <FieldMessage
    id="testCheckbox-message"
    message="Field is invalid"
    messageProps={
      Object {
        "critical": false,
        "positive": false,
        "secondary": false,
      }
    }
    valid={false}
  />
</div>
`;

exports[`Checkbox inputProps should pass through other props to the input 1`] = `
<div
  className="Checkbox__root"
>
  <input
    checked={false}
    className="Checkbox__input Checkbox__input_isCheckbox"
    data-automation="first-name-field"
    id="testCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <label
    className="Checkbox__label"
    htmlFor="testCheckbox"
  >
    <div
      className="Checkbox__checkbox"
    >
      <CheckMarkIcon
        className="Checkbox__checkMark"
        svgClassName="Checkbox__checkMarkSvg Checkbox__checkMarkSvg_isHover"
      />
      <CheckMarkIcon
        className="Checkbox__checkMark"
        svgClassName="Checkbox__checkMarkSvg Checkbox__checkMarkSvg_isSelected"
      />
    </div>
    <Text
      baseline={false}
      className="Checkbox__labelText"
      component="span"
      raw={true}
    >
      Still in role
    </Text>
  </label>
  <FieldMessage
    id="testCheckbox-message"
    message=""
    messageProps={
      Object {
        "critical": false,
        "positive": false,
        "secondary": false,
      }
    }
  />
</div>
`;

exports[`Checkbox should not render the invalid style if tone is set to positive 1`] = `
<div
  className="Checkbox__root"
>
  <input
    checked={false}
    className="Checkbox__input Checkbox__input_isCheckbox"
    id="testCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <label
    className="Checkbox__label"
    htmlFor="testCheckbox"
  >
    <div
      className="Checkbox__checkbox"
    >
      <CheckMarkIcon
        className="Checkbox__checkMark"
        svgClassName="Checkbox__checkMarkSvg Checkbox__checkMarkSvg_isHover"
      />
      <CheckMarkIcon
        className="Checkbox__checkMark"
        svgClassName="Checkbox__checkMarkSvg Checkbox__checkMarkSvg_isSelected"
      />
    </div>
    <Text
      baseline={false}
      className="Checkbox__labelText"
      component="span"
      raw={true}
    >
      Still in role
    </Text>
  </label>
  <FieldMessage
    id="testCheckbox-message"
    message=""
    messageProps={
      Object {
        "critical": false,
        "positive": false,
        "secondary": false,
      }
    }
    tone="positive"
  />
</div>
`;

exports[`Checkbox should render the invalid style for tone="critical" even if the field is valid 1`] = `
<div
  className="Checkbox__root Checkbox__invalid"
>
  <input
    checked={false}
    className="Checkbox__input Checkbox__input_isCheckbox"
    id="testCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <label
    className="Checkbox__label"
    htmlFor="testCheckbox"
  >
    <div
      className="Checkbox__checkbox"
    >
      <CheckMarkIcon
        className="Checkbox__checkMark"
        svgClassName="Checkbox__checkMarkSvg Checkbox__checkMarkSvg_isHover"
      />
      <CheckMarkIcon
        className="Checkbox__checkMark"
        svgClassName="Checkbox__checkMarkSvg Checkbox__checkMarkSvg_isSelected"
      />
    </div>
    <Text
      baseline={false}
      className="Checkbox__labelText"
      component="span"
      raw={true}
    >
      Still in role
    </Text>
  </label>
  <FieldMessage
    id="testCheckbox-message"
    message=""
    messageProps={
      Object {
        "critical": false,
        "positive": false,
        "secondary": false,
      }
    }
    tone="critical"
  />
</div>
`;

exports[`Checkbox should render the invalid style for valid={false} where no tone is set. It should also pass the valid prop 1`] = `
<div
  className="Checkbox__root Checkbox__invalid"
>
  <input
    checked={false}
    className="Checkbox__input Checkbox__input_isCheckbox"
    id="testCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <label
    className="Checkbox__label"
    htmlFor="testCheckbox"
  >
    <div
      className="Checkbox__checkbox"
    >
      <CheckMarkIcon
        className="Checkbox__checkMark"
        svgClassName="Checkbox__checkMarkSvg Checkbox__checkMarkSvg_isHover"
      />
      <CheckMarkIcon
        className="Checkbox__checkMark"
        svgClassName="Checkbox__checkMarkSvg Checkbox__checkMarkSvg_isSelected"
      />
    </div>
    <Text
      baseline={false}
      className="Checkbox__labelText"
      component="span"
      raw={true}
    >
      Still in role
    </Text>
  </label>
  <FieldMessage
    id="testCheckbox-message"
    message=""
    messageProps={
      Object {
        "critical": false,
        "positive": false,
        "secondary": false,
      }
    }
    valid={false}
  />
</div>
`;

exports[`Checkbox should render with button style 1`] = `
<div
  className="Checkbox__root"
>
  <input
    checked={false}
    className="Checkbox__input Checkbox__input_isButton"
    id="testCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <label
    className="Checkbox__label"
    htmlFor="testCheckbox"
  >
    <Text
      baseline={false}
      className="Checkbox__button"
      component="span"
      raw={true}
    >
      Still in role
    </Text>
  </label>
  <FieldMessage
    id="testCheckbox-message"
    message=""
    messageProps={
      Object {
        "critical": false,
        "positive": false,
        "secondary": false,
      }
    }
  />
</div>
`;

exports[`Checkbox should render with className 1`] = `
<div
  className="Checkbox__root testClassname"
>
  <input
    checked={false}
    className="Checkbox__input Checkbox__input_isCheckbox"
    id="testCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <label
    className="Checkbox__label"
    htmlFor="testCheckbox"
  >
    <div
      className="Checkbox__checkbox"
    >
      <CheckMarkIcon
        className="Checkbox__checkMark"
        svgClassName="Checkbox__checkMarkSvg Checkbox__checkMarkSvg_isHover"
      />
      <CheckMarkIcon
        className="Checkbox__checkMark"
        svgClassName="Checkbox__checkMarkSvg Checkbox__checkMarkSvg_isSelected"
      />
    </div>
    <Text
      baseline={false}
      className="Checkbox__labelText"
      component="span"
      raw={true}
    >
      Still in role
    </Text>
  </label>
  <FieldMessage
    id="testCheckbox-message"
    message=""
    messageProps={
      Object {
        "critical": false,
        "positive": false,
        "secondary": false,
      }
    }
  />
</div>
`;

exports[`Checkbox should render with simple props 1`] = `
<div
  className="Checkbox__root"
>
  <input
    checked={false}
    className="Checkbox__input Checkbox__input_isCheckbox"
    id="testCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <label
    className="Checkbox__label"
    htmlFor="testCheckbox"
  >
    <div
      className="Checkbox__checkbox"
    >
      <CheckMarkIcon
        className="Checkbox__checkMark"
        svgClassName="Checkbox__checkMarkSvg Checkbox__checkMarkSvg_isHover"
      />
      <CheckMarkIcon
        className="Checkbox__checkMark"
        svgClassName="Checkbox__checkMarkSvg Checkbox__checkMarkSvg_isSelected"
      />
    </div>
    <Text
      baseline={false}
      className="Checkbox__labelText"
      component="span"
      raw={true}
    >
      Still in role
    </Text>
  </label>
  <FieldMessage
    id="testCheckbox-message"
    message=""
    messageProps={
      Object {
        "critical": false,
        "positive": false,
        "secondary": false,
      }
    }
  />
</div>
`;

exports[`Checkbox should render with standard checkbox style 1`] = `
<div
  className="Checkbox__root"
>
  <input
    checked={false}
    className="Checkbox__input Checkbox__input_isCheckbox"
    id="testCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <label
    className="Checkbox__label"
    htmlFor="testCheckbox"
  >
    <div
      className="Checkbox__checkbox"
    >
      <CheckMarkIcon
        className="Checkbox__checkMark"
        svgClassName="Checkbox__checkMarkSvg Checkbox__checkMarkSvg_isHover"
      />
      <CheckMarkIcon
        className="Checkbox__checkMark"
        svgClassName="Checkbox__checkMarkSvg Checkbox__checkMarkSvg_isSelected"
      />
    </div>
    <Text
      baseline={false}
      className="Checkbox__labelText"
      component="span"
      raw={true}
    >
      Still in role
    </Text>
  </label>
  <FieldMessage
    id="testCheckbox-message"
    message=""
    messageProps={
      Object {
        "critical": false,
        "positive": false,
        "secondary": false,
      }
    }
  />
</div>
`;
