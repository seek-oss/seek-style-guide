// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Checkbox FieldMessage should render field message when passed 1`] = `
<div
  className="root invalid"
>
  <input
    checked={false}
    className="input"
    id="testCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <label
    className="label"
    htmlFor="testCheckbox"
  >
    <div
      className="standard"
    >
      <div
        className="checkbox"
      >
        <CheckMarkIcon
          className="checkMark"
          svgClassName="checkMarkSvg checkMarkSvg_isHover"
        />
        <CheckMarkIcon
          className="checkMark"
          svgClassName="checkMarkSvg checkMarkSvg_isSelected"
        />
      </div>
      <span>
        Still in role
      </span>
    </div>
  </label>
  <FieldMessage
    id="testCheckbox-message"
    message="Field is invalid"
    messageProps={
      Object {
        "critical": false,
        "positive": false,
        "secondary": false,
      }
    }
    valid={false}
  />
</div>
`;

exports[`Checkbox inputProps should pass through other props to the input 1`] = `
<div
  className="root"
>
  <input
    checked={false}
    className="input"
    data-automation="first-name-field"
    id="testCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <label
    className="label"
    htmlFor="testCheckbox"
  >
    <div
      className="standard"
    >
      <div
        className="checkbox"
      >
        <CheckMarkIcon
          className="checkMark"
          svgClassName="checkMarkSvg checkMarkSvg_isHover"
        />
        <CheckMarkIcon
          className="checkMark"
          svgClassName="checkMarkSvg checkMarkSvg_isSelected"
        />
      </div>
      <span>
        Still in role
      </span>
    </div>
  </label>
  <FieldMessage
    id="testCheckbox-message"
    message=""
    messageProps={
      Object {
        "critical": false,
        "positive": false,
        "secondary": false,
      }
    }
  />
</div>
`;

exports[`Checkbox should render with button style 1`] = `
<div
  className="root"
>
  <input
    checked={false}
    className="input"
    id="testCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <label
    className="label"
    htmlFor="testCheckbox"
  >
    <span
      className="button"
    >
      Still in role
    </span>
  </label>
  <FieldMessage
    id="testCheckbox-message"
    message=""
    messageProps={
      Object {
        "critical": false,
        "positive": false,
        "secondary": false,
      }
    }
  />
</div>
`;

exports[`Checkbox should render with className 1`] = `
<div
  className="root testClassname"
>
  <input
    checked={false}
    className="input"
    id="testCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <label
    className="label"
    htmlFor="testCheckbox"
  >
    <div
      className="standard"
    >
      <div
        className="checkbox"
      >
        <CheckMarkIcon
          className="checkMark"
          svgClassName="checkMarkSvg checkMarkSvg_isHover"
        />
        <CheckMarkIcon
          className="checkMark"
          svgClassName="checkMarkSvg checkMarkSvg_isSelected"
        />
      </div>
      <span>
        Still in role
      </span>
    </div>
  </label>
  <FieldMessage
    id="testCheckbox-message"
    message=""
    messageProps={
      Object {
        "critical": false,
        "positive": false,
        "secondary": false,
      }
    }
  />
</div>
`;

exports[`Checkbox should render with simple props 1`] = `
<div
  className="root"
>
  <input
    checked={false}
    className="input"
    id="testCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <label
    className="label"
    htmlFor="testCheckbox"
  >
    <div
      className="standard"
    >
      <div
        className="checkbox"
      >
        <CheckMarkIcon
          className="checkMark"
          svgClassName="checkMarkSvg checkMarkSvg_isHover"
        />
        <CheckMarkIcon
          className="checkMark"
          svgClassName="checkMarkSvg checkMarkSvg_isSelected"
        />
      </div>
      <span>
        Still in role
      </span>
    </div>
  </label>
  <FieldMessage
    id="testCheckbox-message"
    message=""
    messageProps={
      Object {
        "critical": false,
        "positive": false,
        "secondary": false,
      }
    }
  />
</div>
`;

exports[`Checkbox should render with standard checkbox style 1`] = `
<div
  className="root"
>
  <input
    checked={false}
    className="input"
    id="testCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <label
    className="label"
    htmlFor="testCheckbox"
  >
    <div
      className="standard"
    >
      <div
        className="checkbox"
      >
        <CheckMarkIcon
          className="checkMark"
          svgClassName="checkMarkSvg checkMarkSvg_isHover"
        />
        <CheckMarkIcon
          className="checkMark"
          svgClassName="checkMarkSvg checkMarkSvg_isSelected"
        />
      </div>
      <span>
        Still in role
      </span>
    </div>
  </label>
  <FieldMessage
    id="testCheckbox-message"
    message=""
    messageProps={
      Object {
        "critical": false,
        "positive": false,
        "secondary": false,
      }
    }
  />
</div>
`;
