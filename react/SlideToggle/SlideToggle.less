@import (reference) "~seek-style-guide/theme";

@toggle-height: (@row-height * 5);
@toggle-slider-width: 48px;
@toggle-slider-height: (@row-height * 4);
@toggle-button-border: 1px;
@toggle-radius: (@toggle-height / 2);
@slide-distance: @toggle-slider-width - (@toggle-height - @toggle-button-border);
@anticipation-distance: 4px;

.root {
  position: relative;
  display: inline-flex;
  align-items: center;
  cursor: pointer;
  min-height: @touchableTextHeight;
  // IE11 Flex box centering fix
  height: 1px;
}

.switch {
  display: inline-flex;
  align-items: center;
  cursor: pointer;
  user-select: none;

  // IE11 :active selector fix for nested elements to
  // allow the parent (the label) to accept the event
  // https://stackoverflow.com/questions/31061544/active-selector-in-ie11-doesnt-work-if-there-are-nested-elements-how-do-i-mak
  :global(*) {
    pointer-events: none;
  }
}

.input {
  opacity: 0;
  position: absolute;
  margin: 0;
  width: @toggle-slider-width;
  height: @toggle-height;
  cursor: pointer;
}

.labelText {
  .rawText(@standard-type-scale);
  line-height: @toggle-height;

  .input:checked ~ .switch & {
    font-weight: @sk-bold;
  }
}

.inputLeft {
  left: auto;
  right: 0;
}

.labelLeft {
  margin-right: @gutter-width / 2;
}

.labelRight {
  margin-left: @gutter-width / 2;
}

.slideContainer {
  width: @toggle-slider-width;
  height: @toggle-height;
  position: relative;
  flex-shrink: 0;
}

.slider {
  width: @toggle-slider-width;
  height: @toggle-slider-height;
  margin: ((@toggle-height - @toggle-slider-height) / 2) 0;
  border-radius: @toggle-radius;
  background-color: @sk-mid-gray-light;
  position: absolute;
  overflow: hidden;
  // Fix for Safari border-radius, overflow hidden, transform bug:
  // https://gist.github.com/ayamflow/b602ab436ac9f05660d9c15190f4fd7b
  -webkit-mask-image: -webkit-radial-gradient(white, black);

  &::before {
    content: "";
    position: absolute;
    height: 100%;
    width: 100%;
    background-color: @sk-form-accent;
    border-radius: @toggle-radius;
    transition: transform 0.3s ease;
    transform: translateX(-(@slide-distance + @anticipation-distance));
  }

  .input:checked ~ .switch &::before {
    transform: none;
  }
}

.slideButton {
  transition: transform 0.3s ease;
  height: @toggle-height;
  width: @toggle-height;
  border-radius: 50%;
  background-color: @sk-white;
  border: @toggle-button-border solid @sk-mid-gray-light;
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  transform: translateX(-@toggle-button-border);

  // Split the focus styles out to a pseudo element
  // to fix `box-shadow` rendering artifact on transition
  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transition: opacity 0.3s ease;
    opacity: 0;
    .focus();
    border-radius: @toggle-radius;

    .input:not([readonly]):not([disabled]):focus ~ .switch &,
    .input:not([readonly]):not([disabled]):active ~ .switch & {
      opacity: 1;
    }
  }

  .input:active ~ .switch & {
    transform: translateX(-@anticipation-distance);
  }
  .input:checked ~ .switch & {
    transform: translateX(@slide-distance);
  }
  .input:checked:active ~ .switch & {
    transform: translateX(@slide-distance + @anticipation-distance);
  }
}

.svg {
  fill: @sk-form-accent;
  opacity: 0;
  transition: transform 0.3s ease, opacity 0.3s ease;
  transform: rotate(-25deg);

  .input:checked:active ~ .switch & {
    transform: rotate(6deg);
  }
  .input:checked ~ .switch & {
    transform: none;
    opacity: 1;
  }
}
